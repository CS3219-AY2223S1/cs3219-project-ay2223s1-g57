apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend
  labels:
    app: backend
  annotations:
    # https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/ 
    nginx.ingress.kubernetes.io/use-regex: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    # nginx.ingress.kubernetes.io/affinity: 'cookie'
    # nginx.ingress.kubernetes.io/affinity-mode: 'persistent'
    # nginx.ingress.kubernetes.io/session-cookie-name: 'route'
    # nginx.ingress.kubernetes.io/session-cookie-max-age: '7200' # 2 hours
    # nginx.ingress.kubernetes.io/session-cookie-expires: '7200' # 2 hours
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
    # nginx.ingress.kubernetes.io/upstream-hash-by: $remote_addr
    # nginx.ingress.kubernetes.io/rewrite-target: /$1 
spec:
  rules:
    - http:
        paths:
          - path: /api/user-service/?(.*)
            pathType: Prefix
            backend:
              service:
                name: user-service
                port:
                  number: 8000
          - path: /api/matching-service/?(.*)
            pathType: Prefix
            backend:
              service:
                name: matching-service
                port:
                  number: 8001
          - path: /socket.io/*
            pathType: Prefix
            backend:
              service:
                name: matching-service
                port:
                  number: 8001
          - path: /api/question-service/?(.*)
            pathType: Prefix
            backend:
              service:
                name: question-service
                port:
                  number: 8002
          - path: /api/chat-service/?(.*)
            pathType: Prefix
            backend:
              service:
                name: chat-service
                port:
                  number: 8003